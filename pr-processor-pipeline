pipeline {
    agent any

   options {
        buildDiscarder(logRotator(numToKeepStr: '10', artifactNumToKeepStr: '10'))
     }

    parameters {
        string(name: 'PULL_REQUEST_PROCESSOR_HOME', defaultValue: '/opt/tools/pr-processor/', description: 'pr-processor home')
    }

    environment {
        HERA_USERNAME = 'jenkins'
        HERA_HOSTNAME = 'olympus'
    }

    stages {
        stage('Prep') {
            steps {
                cleanWs()
                script {
                    dir('hera') {
                        git 'https://github.com/jboss-set/hera.git'
                    }

                    dir('harmonia') {
                        git branch: 'olympus', url: 'https://github.com/jboss-set/harmonia.git'
                    }

                    sh label: '', script: "mkdir -p ${env.WORKSPACE}/workdir"
                    script {
                        env.BUILD_SCRIPT = "${env.WORKSPACE}/hera/build-wrapper.sh"
                    }
                    echo "BUILD_COMMAND: ${env.BUILD_COMMAND}"
                    // Start container
                    sh label: '', script: "${env.WORKSPACE}/hera/hera.sh run"
                }
            }
        }
        stage ('Build') {
            steps {
                sh label: '', script: "${env.WORKSPACE}/hera/hera.sh job"
                publishHTML([allowMissing: false, alwaysLinkToLastBuild: false, keepAll: false, reportDir: '.', reportFiles: './workdir/report.html', reportName: 'HTML Report', reportTitles: ''])
                archiveArtifacts artifacts: '**/*', fingerprint: true, followSymlinks: false, onlyIfSuccessful: true
            }
        }
    }
    post {
        always {
            script {
             try {
                  sh label: '', script: "${env.WORKSPACE}/hera/hera.sh stop"
              } catch (err) {
                  echo "Error while deleting container: ${err}"
              }
            }
        }
    }
}
