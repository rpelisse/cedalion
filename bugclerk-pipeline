pipeline {
    agent any
    triggers { cron("@hourly") }

    options {
      buildDiscarder(logRotator(numToKeepStr: '10', artifactNumToKeepStr: '10'))
    }

    stages {
        stage ('Build') {
            steps {
              dir('hera') {
                git 'https://github.com/jboss-set/hera.git'
              }
              script {
                env.BUILD_SCRIPT = "${env.WORKSPACE}/hera/mvn-wrapper.sh"
                git url: "${env.GIT_REPOSITORY_URL}",
                    branch: "${env.GIT_REPOSITORY_BRANCH}"
                sh label: '', script: "${env.WORKSPACE}/hera/hera.sh run"
                sh label: '', script: "${env.WORKSPACE}/hera/hera.sh job"
                publishHTML([allowMissing: false, alwaysLinkToLastBuild: false, keepAll: false, reportDir: '.', reportFiles: 'bugclerk-report.html', reportName: 'HTML Report', reportTitles: ''])
                archiveArtifacts artifacts: '**/*', fingerprint: true, followSymlinks: false, onlyIfSuccessful: true
                }
            }
        }
    }
    post {
        always {
            script {
                try {
                    sh label: '', script: "${env.WORKSPACE}/hera/hera.sh stop"
                } catch (err) {
                    echo "Error while deleting container: ${err}"
                }
            }
        }
        failure {
            mail to: 'jboss-set-ops@redhat.com'', from: 'rpelisse@redhat.com',
                subject: "Build: ${env.JOB_NAME} - Failed",
                body: "Job Failed - \"${env.JOB_NAME}\" build: ${env.BUILD_NUMBER}\n\nView the log at:\n ${env.BUILD_URL}\n\nBlue Ocean:\n${env.RUN_DISPLAY_URL}"
        }
    }
}
